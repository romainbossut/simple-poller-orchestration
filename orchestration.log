class Task:
    def __init__(self, function, *args, max_retry=3):
        self.function = function
        self.args = args
        self.retry_count = 0
        self.max_retry = max_retry

    def run(self):
        self.start_time = datetime.datetime.now()
        try:
            self.function(*self.args)
        except Exception as e:
            logger.error("Error running task {}".format(self.function.__name__))
            logger.error(e)
            if self.retry_count < self.max_retry:
                self.retry_count += 1
                self.run()
            else:
                raise e
        self.end_time = datetime.datetime.now()

    def get_start_time(self):
        return self.start_time

    def get_end_time(self):
        return self.end_time

    def get_duration(self):
        return self.end_time - self.start_time



# An elaborate, high quality docstring for the above class:
"""
This is a class that defines a task to be run.

Args:
    function (function): The function to be run.
    *args (list): The arguments to be passed to the function.
    max_retry (int): The maximum number of times to retry running the function
        in case of an exception.

Attributes:
    function (function): The function to be run.
    args (list): The arguments to be passed to the function.
    retry_count (int): The number of times the function has been retried.
    max_retry (int): The maximum number of times to retry running the function
        in case of an exception.

"""



# A simple function to test the Task class:
def test_function(a, b, c):
    print(a, b, c)


# Create a task object:
task = Task(test_function, 1, 2, 3)

# Run the task:
task.